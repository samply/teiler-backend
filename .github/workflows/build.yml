name: Build

on:
  schedule:
    - cron: '0 10 * * *' # every day at 10am
  push:
    branches:
      - main
      - developer
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - developer

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Cache Local Maven Repo
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('pom.xml') }}

      - name: Test with Maven
        run: mvn -B package


  build:
    needs: test
    runs-on: ubuntu-20.04

    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Cache Local Maven Repo
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('pom.xml') }}

      - name: Build with Maven
        run: mvn -B package -DskipTests

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v3
        with:
          images: |
            samply/teiler-core
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: samply/teiler-core:sha-${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@codeql-bundle-20220401
        with:
          sarif_file: trivy-results.sarif
